# Default values for walrus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Component enablement flags
components:
  node:
    enabled: true

replicaCount: 1

image:
  pullPolicy: Always
  repository: mysten/walrus-service
  tag: testnet

walrus:
  rpc: https://mysten-rpc.testnet.sui.io:443
  networkKey: ""
  protocolKey: ""
  client:
    address: "0x"
    key: ""

  config:
    name: name
    public_host: hostname
    public_port: 9185
    commission_rate: 0
    sui:
      system_object: 0x98ebc47370603fe81d9e15491b2f1443d619d1dab720d586e429ed233e1255c1
      staking_object: 0x20266a17b4f1a216727f3eef5772f8d486a9e3b5e319af80a5b75809c035561d
      rpc_fallback_config:
        checkpoint_bucket: https://checkpoints.testnet.sui.io
    voting_params:
      storage_price: 100
      write_price: 2000
      node_capacity: 1073741824000
    metrics_push:
      push_url: https://walrus-metrics-testnet.mystenlabs.com/publish/metrics
    tls:
      disable_tls: true

# Aggregator configuration
aggregator:
  enabled: false
  public_port: 9000
  metrics_port: 27182

# Publisher configuration
publisher:
  enabled: false
  public_port: 9001
  metrics_port: 27183
  client:
    address: "0x"
    key: ""
  decodeSecret: ""
  expiringSec: 120

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

pruningConfig:

persistence:
  # -- Kubernetes storage class to use for fullnode persistent storage
  storageClassName:
  # -- Size of fullnode persistent storage
  size: 1000Gi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []
